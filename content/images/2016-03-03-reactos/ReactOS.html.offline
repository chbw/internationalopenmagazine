<!DOCTYPE html>
<!-- saved from url=(0060)http://internationalopenmagazine.org/2016-03-03-reactos.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta name="author" content="BYFIELD Bruce">
        <meta name="keywords" content="coding,hacking,free software / open-source">
        <meta name="description" content="ReactOS: Building a Free-Licensed Windows">
    
        <meta name="ICBM" content="49.248809, -122.98051">
        <meta name="geo.position" content="49.248809;-122.98051">
        <meta name="geo.placename" content="Burnaby">
        <meta name="geo.region" content="CA-BC">
    
    
    

    <title>ReactOS: Building a Free-Licensed Windows - international open magazine</title>


        <!-- Page Content -->
<section id="content">
    <article>
        <div class="row">
            <div class="col-lg-9">
                <header class="page-header">
                    <h1>
                        <a href="http://internationalopenmagazine.org/2016-03-03-reactos.html" rel="bookmark" title="Permalink to ReactOS: Building a Free-Licensed Windows">
                            ReactOS: Building a Free-Licensed Windows
                        </a>
                        <small>
<div class="post-info">
    <div class="publish-info-block">
        <small>
            <span class="published">
                <i class="fa fa-calendar padding-small"></i><time datetime="2016-03-03T20:45:00"> 2016-03-03</time>
            </span>
            
            
                 
                 <span>Author: </span>
                      <!-- <a href="http://internationalopenmagazine.org/author/byfield-bruce.html">--> <a href="http://internationalopenmagazine.org/author/byfield-bruce.html"><i class="fa fa-user padding-small"></i>BYFIELD Bruce </a>
            
            <span class="category">
                 <i class="fa fa-folder-open padding-small"></i><a href="http://internationalopenmagazine.org/category/blog.html">blog</a>
            </span>
                Geodata: <a href="http://www.openstreetmap.org/?mlat=49.248809&amp;mlon=%20-122.98051#map=16/49.248809/-122.98051&amp;layers=N">Burnaby</a>
            <span class="tags">
                <i class="fa fa-tags padding-small"></i>
                <a href="http://internationalopenmagazine.org/tag/coding.html">coding</a> /                 <a href="http://internationalopenmagazine.org/tag/hacking.html">hacking</a> /                 <a href="http://internationalopenmagazine.org/tag/free-software-open-source.html">free software / open-source</a>            </span>
        </small>
    </div>
</div><!-- /.post-info -->                        </small>
                    </h1>
                </header>
            </div>
        </div>
<div name="headerimage"><img src="headerimage-reactos.jpg" alt="react os" width="640"><br><small>Image remixed by Horst JENS sources/rights: <a href="https://pixabay.com/en/stature-pc-access-locked-data-fig-935621/">Succo</a>, <a href="https://pixabay.com/en/chain-broken-link-freedom-297842/">clker</a>, <a href="https://pixabay.com/en/system-locked-screen-admin-97634/">openicons</a> at Pixabay <a href="https://creativecommons.org/publicdomain/zero/1.0/">cc 0/public domain</a>. Reactor OS Logo from <a href="https://commons.wikimedia.org/wiki/File:ReactOS_logo.svg">Wikimedia.org</a>: GPL</small></div>


<p><br><br>
From dual-booting to <strong><a href="https://www.winehq.org/">WINE</a></strong>, free software has always struggled to provide a solution for running Windows applications. However, few of these efforts have been more ambitious than <a href="http://reactos.org/">ReactOS</a>, a free-licensed implementation of Windows. The project has been at work since 2006 and, in February 2016, ReactOS finally <a href="http://reactos.org/project-news/reactos-040-released">released its first alpha version</a>, after a decade of difficult and necessarily cautious development.</p>
<p>According to developer <a href="https://www.reactos.org/wiki/User:Z98">Ziliang Guo</a>, ReactOS grew from the failure of the <a href="https://www.reactos.org/wiki/FreeWin95">FreeWin95</a> project, whose goal was a free-licensed implementation of Windows 95.</p>
<p><em>FreeWin95 got basically nowhere because the people involved got bogged down in technical discussions about how to implement the OS, with no one willing to actually do the actual coding.</em></p>
<p>As a result of this lack of progress, Jason Filby and David Welch created a new project to create a free version of Windows NT. Jeff Know, another project member, suggest the name ReactOS because the effort was a reaction to Microsoft’s monopoly on the desktop.</p>
<div><a href="winzip.png"><img src="winzip.png" width="640" alt="winzip"></a><br>
<small>Blast from the past: WinZip running on ReactOS</small></div>

<h2>Reverse Engineering and Documentation</h2>
<p>From the start, ReactOS had difficulties. When the project started, most Windows compilers were <strong><a href="https://en.wikipedia.org/wiki/Proprietary_software">proprietary</a></strong>, and the few free-licensed ones, painfully lacking. Guo remembers project member Casper Hornstrup as the developer chiefly responsible for MinGW (Minimalist GNU for Windows), a major step in developing the necessary tools. Under these circumstances, even the ability to boot ReactOS was a major milestone in development. As Guo remarks,</p>
<p><em>Actually booting an operating system is a more involved task than most lay-people would think.</em></p>
<p>Another early problem was a lack of documentation for the internal architecture of Windows NT. For instance, lack of information on kernel level APIs made compatibility with NT drivers difficult. Similarly, internal interdependencies had to hacked, which led to and increased technical debt — that is, a gradual increase in problems that slowed progress.</p>
<p><em>When the team was able to move onto implementing missing functionality, there was often a need to go back into existing components and remove the hacks, which could end up in something of a rabbit’s hole of hacks holding together other hacks, and the entire thing collapsing in unfortunate ways.</em></p>
<p>Guo explains.</p>
<p>Today, the situation is somewhat improved. <em>“There is plenty of available documentation about Microsoft Windows,”</em> says project coordinator Aleksey Bragin, including the MSDN site, as well as books such <a href="https://technet.microsoft.com/en-us/sysinternals/bb963901.aspx">Windows Internals</a>, <a href="https://www.microsoft.com/MSPress/books/4354.aspx">Inside Microsoft Windows</a>, and <a href="http://www.amazon.com/Windows-Graphics-Programming-Hewlett-Packard-Professional/dp/0130869856">Windows Graphics Programming</a>. This information can be used freely, but sometimes contains errors, and undocumented parts remain.</p>
<p>Another advantage has been WINE’s compatibility layer for the Win 32API, which ReactOS could reuse. But <em>“Of course the team still needed to implement the Win32 subsystem proper that would power those APIs,”</em> says Guo.</p>
<p>Consequently, despite the occasional advantage, to move forward, ReactOS continues to rely on <strong><a href="https://en.wikipedia.org/wiki/Reverse_engineering">reverse engineering</a></strong> by third parties. At other times, project members resorted to blackboxing, systematically testing Windows’ responses to different types of input in the hopes of understanding what was happening internally.</p>
<p>Unfortunately, reverse engineering is often a legal mine field.</p>
<p><em>There has always been an aswareness on the part of the project that Microsoft might view us as a strategic threat and seek to shut us down</em></p>
<p>says Guo. To avoid any potential problems, ReactOS has always been careful to make certain that all contributions were not derived from restricted Microsoft code. For example, code created through reverse engineering, and then converting Assembly into C code is not accepted, but blackboxing is.</p>
<p>In fact, according to Bragin, ReactOS prefers to avoid reverse engineering whenever possible. When reverse engineering is unavoidable, contributors are expected to apply <a href="http://www.gnu.org/prep/standards/standards.html#Reading-Non_002dFree-Code">2.1 of the GNU Coding Standards</a>, and avoid refering to any proprietary source code — especially Windows’ — for or during work on React OS. Instead, all code must be as different possible from the original.</p>
<p>Even so, reverse engineering remains a gray area. Guo recalls that, at one point, project developers argued over differing interpretations of what constitutes untainted code. The dispute caused several developers to quit, and resulted in an internal audit of the project’s code. Fortunately, no tainted code was found, and the project was eventually able to continue.</p>
<h2>The Next Challenges</h2>
<p>The release of alpha version 0.4 comes after several years of crowdsourcing with limited success. The new release is available as a Live CD, which installs easily in VirtualBox, where — naturally enough — it should be registered as Windows NT. The operating system boots in a matter of seconds, perhaps because it emulates the systems of twenty years ago on modern hardware. It runs a variety of software, including Winzip and free software such as LibreOffice, as well as a few older or simpler games.</p>
<div><a href="reactos-620x526.png"><img src="reactos-620x526.png" width="640" alt="reactos screenshot"></a><br><small>ReactOS running its version of Solitaire.
</small></div>

<p>However, challenges remain. As always, qualified developers are rare:</p>
<p><em>The number of people who are NT kernel experts who don’t work for Microsoft already are few and ar between.</em></p>
<p>Guo notes. Supporting current hardware can be difficult as well, although Guo adds that variable hardware standards are a problem that he euphemistically describes as being <em>“a charlie foxtrot of epic proportions that not even Microsoft had a trouble-free experience with.“</em></p>
<p>Another problem is that, after some extensive work on usability in recent releases, in Guo’s words,</p>
<p><em>Most of the low hanging fruit has been plucked, with the consequence that major, user-visible changes are far fewer that in the past.</em></p>
<p>What remains are some fundamental problems. For example, asked about priorities, Bragin responds that</p>
<p><em>The most important gap is stability of the system, related to memory management and caching. There are other problems, of course, but having a really stable kernel would be a great success for the project.</em></p>
<p>Another pressing problem is support for DirectX for games. However, ReactOS hopes to piggyback on WINE’s development of a DirectX wrapper over OpenGL. Bragin writes that game support remains important because their use of memory, the file system and networking make them <em>“a good test for the OS itself.”</em></p>
<p>Still, the first alpha release remains a significant milestone. ReactOS is already advanced enough that Bragin uses it for teaching about operating systems.</p>
<p><em>But I really want to see a moment when ReactOS is able to substitute for Windows in some use case. That moment will definitely happen within the next five years</em></p>
<p>he predicts.</p>
<h2>The Drive Towards General Release</h2>
<p>As often happens with free software interacting with proprietary development, ReactOS would appear to be perpetually behind — reacting, if you pardon the pun — to Microsoft’s constant changes to its API. However, that situation may be less gloomy than it first appears. For one thing, so long as the project continues its blackbox practices, Microsoft’s apparently friendlier attitude towards free software these days might mean fewer legal dangers.</p>
<p>Even more importantly, ReactOS has no interest in reproducing every feature of each Windows release.</p>
<p><em>We try to produce good features, for example UI theming allows us to switch between various themes. However, not everything that Microsoft adds is good. For example, there is no catch up play for the Metro Interface, or for any other new APIs until they gain enough popularity. If someone really wants it, she could do a Windows 8 Metro Theme. However, I am not sure there are many who would love such an interface. I just don’t see that much added value in Windows 10 or Windows 8.</em></p>
<p>says Bragin.</p>
<p>Whatever happens, with its alpha release, ReactOS appears to be gaining momentum. Although its goal remains challenging, after a decade of work, its prospect for a general release seems to be in sight at last, if only distantly.</p>
<p><small>This article was first published on 2016-03-03 by Bruce BYFIELD on <a href="http://www.ocsmag.com/2016/03/03/reactos-building-a-free-licensed-windows/">OCSMag, the Open Content &amp; Software Magazine</a> under CC-BY-SA 4.0 license. </small></p>

<div name="sidebarright" style="">
<b>Name</b>: <a href="http://www.members.axion.net/~bbyfield/index.html">Bruce BYFIELD</a><br>
<b>Contact</b>: <a href="https://twitter.com/bbyfield">@bbyfield</a>, <a href="http://www.members.axion.net/~bbyfield/contact.html">bbyfield@axion.net</a><br>
<b>Shorturl</b>: <a href="http://goo.gl/XbRb9E">http://goo.gl/XbRb9E</a><br>
<b>Hashtag</b>: <tt>#reactos</tt><br>
<b>Fork / improve</b>: <a href="https://github.com/horstjens/internationalopenmagazine/blob/master/content/blog/2016-03-03-reactos.md">on Github</a><br>
<b>Extras:</b>: <a href="http://brucebyfield.com/">Author's Blog</a>, <a href="http://www.ocsmag.com/2016/03/03/reactos-building-a-free-licensed-windows/">original article</a><br>
<a href="https://creativecommons.org/licenses/by-sa/4.0/"><img src="ccbysa88x31.png" align="right" alt="cc-by-sa"></a><b>License</b> for text and photos in this article, unless indicated otherwise (e.g. <i>Image rights</i> notice below pictures): <a href="https://creativecommons.org/licenses/by-sa/4.0/">creative commons attribute share-alike 4.0</a><br>
<b>Location</b>: <img src="openstreetmap.png" alt="openstreetmap">
<a href="http://www.openstreetmap.org/#map=12/49.2145/-122.9487"></a>
<br>
<img src="bruce-byfield.png" alt="Bruce BYFIELD" width="100" align="right">
<b>about the author</b>: I am a freelance writer and editor. Mainly, I specialize in free and open source software (FOSS). Software reviews, community news, business news, legal events -- if it's about FOSS, I write about it. I also write about management and careers, and, in my spare time, about Northwest Coast Art.<br>
To date, I have published over 1200 articles, mostly online on such sites as Datamation, IT Manager's Journal, Linux.com, Linux Developer Network, Linux Journal, LinuxPlanet, LWN, NewsForge, Techwr-l, and Wazi. Other places I have published include The New Internationalist, Linux Pro Magazine and The Linux Journal. My article "11 Tips for Moving to OpenOffice.org" was the cover story for the March 2004 Linux Journal.<br>
You can see some comments about my writing on my <a href="http://www.members.axion.net/~bbyfield/kudos.html">Kudos</a> and <a href="http://www.members.axion.net/~bbyfield/abuse.html">Abuse</a> pages. 
<b>Donate author</b>: No donation address given yet.<hr>
<b>technical terms</b> explained by Wikipedia:<br>
<a href="https://en.wikipedia.org/wiki/Wikipedia:Banners_and_buttons#/media/File:Qxz-ad39.png"><img src="wikipedia250.png" alt="wikipedia" width="250"></a>
<hr>
<a href="https://en.wikipedia.org/wiki/Wine_(software)#/media/File:WINE-logo.png"><img src="WINE-logo.png" alt="Wine-logo" width="100" align="right"></a><b><a href="https://en.wikipedia.org/wiki/Wine_(software)">WINE</a></b>: (<a href="https://en.wikipedia.org/wiki/Recursive_acronym">recursive acronym</a> for <i>Wine Is Not an Emulator</i>) is a <a href="https://en.wikipedia.org/wiki/Free_and_open-source_software">free and open source</a> <a href="https://en.wikipedia.org/wiki/Compatibility_layer">compatibility layer</a> <a href="https://en.wikipedia.org/wiki/Software_application">software application</a> that aims to allow applications designed for <a href="https://en.wikipedia.org/wiki/Microsoft_Windows">Microsoft Windows</a> to run on <a href="https://en.wikipedia.org/wiki/Unix-like">Unix-like</a> <a href="https://en.wikipedia.org/wiki/Operating_system">operating systems</a>. Wine also provides a <a href="https://en.wikipedia.org/wiki/Software_library">software library</a>, known as Winelib, against which developers can <a href="https://en.wikipedia.org/wiki/Compiler">compile</a> Windows applications to help <a href="https://en.wikipedia.org/wiki/Porting">port</a> them to Unix-like systems.<br>
It duplicates functions of Windows by providing alternative implementations of the DLLs that Windows programs call, and a process to substitute for the Windows NT kernel. This method of duplication differs from other methods that might also be considered emulation, where Windows programs run in a virtual machine. Wine is predominantly written using black-box testing reverse-engineering, to avoid copyright issues,<br>
The name Wine initially was an abbreviation for Windows emulator. Its meaning later shifted to the recursive acronym, Wine is not an emulator in order to differentiate the software from CPU emulators. While the name sometimes appears in the forms WINE and wine, the project developers have agreed to standardize on the form Wine. <small><a href="https://en.wikipedia.org/wiki/Wine_(software)">Read full wikipedia article...</a></small><hr>
<b><a href="https://en.wikipedia.org/wiki/Proprietary_software">Proprietary Software</a></b>, non-free software (in the sense of <a href="http://www.gnu.org/philosophy/categories.html#non-freeSoftware">missing freedoms</a>), or closed-source software is software that fails to meet the criteria for <a href="https://en.wikipedia.org/wiki/Free_software">free</a> or <a href="https://en.wikipedia.org/wiki/Open-source">open-source</a> software. Although definitions vary in scope, any software which places restrictions on use, analysis, modification, or distribution (unchanged or modified) can be termed proprietary.<br>
A related, but distinct categorization in the <a href="https://en.wikipedia.org/wiki/Software_industry">software industry</a> is <a href="https://en.wikipedia.org/wiki/Commercial_software">commercial software</a>, which refers to software produced for sale, but without necessarily meaning it is closed-source.<small><a href="https://en.wikipedia.org/wiki/Proprietary_software">Read the full Wikipedia article...</a></small><hr>
<b><a href="https://en.wikipedia.org/wiki/Reverse_engineering">Reverse engineering</a></b>, also called <b>back engineering</b>, is the <a href="http://internationalopenmagazine.org/wiki/Process_(engineering)" title="Process (engineering)">processes</a> of extracting <a href="http://internationalopenmagazine.org/wiki/Knowledge" title="Knowledge">knowledge</a> or <a href="http://internationalopenmagazine.org/wiki/Design" title="Design">design</a> information from anything man-made and re-producing it or reproducing anything based on the extracted information. The process often involves disassembling something (a <a href="http://internationalopenmagazine.org/wiki/Machine" title="Machine">mechanical device</a>, <a href="http://internationalopenmagazine.org/wiki/Electronic_component" title="Electronic component">electronic component</a>, computer program, or biological, chemical, or organic matter) and analyzing its components and workings in detail.<p></p>
<p>The reasons and goals for obtaining such information vary widely from everyday or socially beneficial actions, to criminal actions, depending upon the situation. Often no <a href="http://internationalopenmagazine.org/wiki/Intellectual_property_rights" title="Intellectual property rights" class="mw-redirect">intellectual property rights</a> are breached, such as when a person or business cannot recollect how something was done, or what something does, and needs to reverse engineer it to work it out for themselves. Reverse engineering is also beneficial in crime prevention, where suspected <a href="http://internationalopenmagazine.org/wiki/Malware" title="Malware">malware</a> is reverse engineered to understand what it does, and <a href="http://internationalopenmagazine.org/wiki/Anti-virus" title="Anti-virus" class="mw-redirect">how to detect and remove it</a>, and to allow computers and devices to work together ("interoperate") and to allow saved files on obsolete systems to be used in newer systems. By contrast, reverse engineering can also be used to <a href="http://internationalopenmagazine.org/wiki/Software_cracking" title="Software cracking">"crack" software and media</a> to remove their <a href="http://internationalopenmagazine.org/wiki/Copy_protection" title="Copy protection">copy protection</a>, or to create a (possibly improved) <a href="http://internationalopenmagazine.org/wiki/Copying" title="Copying">copy</a> or even a <a href="http://internationalopenmagazine.org/wiki/Knockoff" title="Knockoff" class="mw-redirect">knockoff</a>; this is usually the goal of a <a href="http://internationalopenmagazine.org/wiki/Competitor" title="Competitor" class="mw-redirect">competitor</a>. <small><a href="https://en.wikipedia.org/wiki/Reverse_engineering">Read the full Wikipedia article...</a></small>
<br>
</p></div>


<!-- intopenmag-unten -->

                </div>
                <!--<footer class="text-right">
                    <p>- BYFIELD Bruce</p>
                </footer>-->
            </div>
        </div>
    </article>
</section>
   </div>
        </div>
        <!-- /#page-content-wrapper -->
    </div>
 


</body></html>
